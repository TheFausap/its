;;;-*-Midas-*-

title Chat -- Demon.

.insrt chat format
com"page==:com"dpage

a=:1
b=:2
c=:3
d=:4
e=:5
t=:6
tt=:7	? intacs==:t_6+2	;T & TT saved by interrupts.

pi=:15	;PI=I-1 So JFFO will load I
i=:16	;Bit numbers kept here.
u=:17	;UINDs kept here.

dsk==:1
usr==:2

define syscall name,args
	.call [setz ? sixbit /name/ ? args(400000)]
termin

define lose code,pc
	jrst [	syscall lose,[movei code ? movei pc]
		 .lose %lssys]
termin

.scalar duname
.scalar djname
.scalar ddir

go:	move tt,[-lintpdl,,intpdl-1]
	movem tt,intsp
	.suset [.roption,,a]
	tlo a,%opint+%opopc
	move tt,[-6,,[	.soption,,a
			.s40addr,,[twenty,,forty]
			.smask,,[%pirlt+%pipdl]
			.smsk2,,[0]
			.rxuname,,duname
			.rxjname,,djname
			.rhsname,,ddir
			]]
	.suset tt
	;;Create area:
	move tt,[-com"npages,,com"page]
	syscall corblk,[movei %cbndr+%cbndw+%cbpub
			movei %jself ? move tt
			movei %jsnew]
	 .lose %lssys
	;;Initialize area:
	setzm com"count
	setzm com"tick
	setzm com"dhang
	setom com"lock
	move tt,[com"lock,,com"lock+1]
	blt tt,com"lock+com"nmsgs-1
	;;Install ourselves:
	move tt,[-4,,[	sixbit /uname/ ? move duname
			sixbit /jname/ ? move djname
			]]
	syscall usrvar,[moves e ? movei %jself ? tt]
	 jrst [	cain e,%etop	;Allow debugging.
		 jrst .+1
		cain e,%eexfl	;Someone else is it.
		 .logout 1,
		lose %lssys(e),.-1
		]

	;;Wake up every minute:
	move tt,[%rlset,,[60.*60. ? 0 ? 0 ? 0]]
	.realt tt,
	;;Initialize process table:
	movei tt,p.msg
	movem tt,proc
	move tt,[proc,,proc+1]
	blt tt,proc+com"nmsgs-1
	movei tt,p.die
	movem tt,proc+.lz com"%kdie
	movei tt,p.rlt
	movem tt,proc+.lz com"%krlt
	setzi pi,
	jrst wait1

wait:	jffo pi,wait2
wait1:	skipn com"dhang
	 .hang
	exch pi,com"dhang	;PI must contain 0 here.
	jffo pi,wait2
	 .lose

wait2:	andcm pi,unjffo(i)
	jrst @proc(i)

.vector proc(36.)

unjffo:	repeat 36., 1_<35.-.rpcnt>

p.msg:	move tt,com"msg(i)
	movem tt,lstmsg'
	move tt,com"user(i)
	movem tt,lstuser'
	setom com"lock(i)
	jrst wait

p.die:	.logout 1,

p.rlt:	aos com"tick
	jrst wait

tsint:	intacs,,intsp
	%pirlt ? 0 ? %pirlt ? 0 ? rltint
ltsint==:.-tsint

lintpdl==:50.			;Maximum depth: one interrupt.
.vector intpdl(lintpdl)
.scalar intsp

dismis:	setz
	sixbit /dismis/
	movsi intacs
	setz intsp

rltint:	movei tt,com"%krlt
	iorm tt,com"dhang
	.call dismis
	 .lose %lssys

cnstnts:
constants

variables

twenty:	block 20

forty:	0
	0
	-ltsint,,tsint

pat:	block 100.
patch==:pat

ifg .-<com"page_12>, .err DPAGE too low.

end go
